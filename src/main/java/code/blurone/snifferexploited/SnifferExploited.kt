package code.blurone.snifferexploited

import org.bukkit.GameMode
import org.bukkit.Material
import org.bukkit.craftbukkit.v1_20_R1.entity.CraftPlayer
import org.bukkit.craftbukkit.v1_20_R1.entity.CraftSniffer
import org.bukkit.entity.EntityType
import org.bukkit.entity.Sniffer
import org.bukkit.event.EventHandler
import org.bukkit.event.Listener
import org.bukkit.event.player.PlayerInteractEntityEvent
import org.bukkit.inventory.EquipmentSlot
import org.bukkit.metadata.FixedMetadataValue
import org.bukkit.plugin.java.JavaPlugin
import org.bukkit.scheduler.BukkitRunnable

class SnifferExploited : JavaPlugin(), Listener {
    override fun onEnable() {
        // Plugin startup logic
        server.pluginManager.registerEvents(this, this)
    }

    override fun onDisable() {
        // Plugin shutdown logic
    }

    @EventHandler
    fun playerInteractEvent(event: PlayerInteractEntityEvent)
    {
        if (event.rightClicked.type != EntityType.SNIFFER || event.player.gameMode == GameMode.SPECTATOR ||
            (event.hand == EquipmentSlot.HAND && !(event.player.inventory.itemInMainHand.type == Material.SUGAR || event.player.inventory.itemInMainHand.type == Material.LEGACY_SUGAR)) ||
            (event.hand == EquipmentSlot.OFF_HAND && !(event.player.inventory.itemInOffHand.type == Material.SUGAR || event.player.inventory.itemInOffHand.type == Material.LEGACY_SUGAR)))
            return

        if (event.player.gameMode != GameMode.CREATIVE) {
            val sugarStack = if (event.hand == EquipmentSlot.HAND) event.player.inventory.itemInMainHand else event.player.inventory.itemInOffHand
            sugarStack.amount--
        }

        val sniffer = event.rightClicked as CraftSniffer

        if (!sniffer.hasMetadata("SnifferExploited.HighOnSugar"))
        {
            sniffer.handle.goalSelector.removeAllGoals { it.stop(); true }
            sniffer.handle.navigation.stop()
            sniffer.handle.lookAt((event.player as CraftPlayer).handle, 0f, 0f)
            val goal = RunAroundLikeHighOnSugarGoal(sniffer)
            object : BukkitRunnable()
            {
                override fun run() {sniffer.state = Sniffer.State.SNIFFING}
            }.runTaskLater(this, 5)
            object : BukkitRunnable()
            {
                override fun run() {
                    sniffer.handle.goalSelector.addGoal(0, goal)
                    sniffer.handle.goalSelector.availableGoals.first { it.goal == goal }.start()
                }
            }.runTaskLater(this, 25)
            sniffer.setMetadata("SnifferExploited.HighOnSugar", FixedMetadataValue(this, goal))
        }
        else
        {
            sniffer.state = Sniffer.State.SNIFFING
            (sniffer.getMetadata("SnifferExploited.HighOnSugar").first().value() as RunAroundLikeHighOnSugarGoal).potentiate()
        }
    }
}
