package code.blurone.snifferexploited

import org.bukkit.Material
import org.bukkit.craftbukkit.v1_20_R1.entity.CraftSniffer
import org.bukkit.entity.Sniffer
import org.bukkit.event.EventHandler
import org.bukkit.event.Listener
import org.bukkit.event.entity.ItemSpawnEvent
import org.bukkit.plugin.java.JavaPlugin
import org.bukkit.scheduler.BukkitRunnable

class SnifferExploited : JavaPlugin(), Listener {
    override fun onEnable() {
        // Plugin startup logic
        server.pluginManager.registerEvents(this, this)
    }

    override fun onDisable() {
        // Plugin shutdown logic
    }

    @EventHandler
    fun onSugarDropped(event: ItemSpawnEvent) {
        logger.info("at least the event works")
        val itemStack = event.entity.itemStack
        if (itemStack.data?.itemType != Material.LEGACY_SUGAR && itemStack.data?.itemType != Material.SUGAR) return
        logger.info("Sugar dropped")

        object : BukkitRunnable()
        {
            override fun run() {
                if (!event.entity.isValid) {
                    logger.info("entity is not valid")
                    cancel()
                    return
                }

                if (!event.entity.isOnGround) return

                for (sniffer in event.entity.world.getNearbyEntities(event.entity.location, 9.0, 9.0, 9.0).filterIsInstance<Sniffer>())
                {
                    val goal = MoveToSugarGoal((sniffer as CraftSniffer).handle, event.entity)
                    sniffer.handle.goalSelector.addGoal(0, goal)
                    sniffer.handle.goalSelector.availableGoals.first { it.goal == goal }.start()
                }
            }
        }.runTaskTimer(this, 0, 5)
    }
}
