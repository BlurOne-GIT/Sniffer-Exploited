package code.blurone.snifferexploited

import org.apache.commons.lang.UnhandledException
import org.bukkit.NamespacedKey
import org.bukkit.configuration.ConfigurationSection
import org.bukkit.entity.EntityType
import org.bukkit.entity.Player
import org.bukkit.event.EventHandler
import org.bukkit.event.Listener
import org.bukkit.event.entity.EntityPickupItemEvent
import org.bukkit.inventory.ItemStack
import org.bukkit.persistence.PersistentDataType

class OcdTranslator(
    private val potionTranslations: ConfigurationSection,
    private val splashTranslations: ConfigurationSection,
    private val lingeringTranslations: ConfigurationSection,
    private val infoTranslations: ConfigurationSection,
    private val potionNamespacedKey: NamespacedKey) : Listener {
    @EventHandler
    fun ocdTranslator(event: EntityPickupItemEvent)
    {
        if (event.entity.type != EntityType.PLAYER ||
            !isSniffingPotion(event.item.itemStack, potionNamespacedKey))
            return

        translate(event.item.itemStack, (event.entity as Player).locale)
    }

    private fun translate(item: ItemStack, locale: String)
    {
        val strippedLocale = locale.split("_")[0]
        val meta = item.itemMeta!!
        val potionLevel = meta.persistentDataContainer.get(potionNamespacedKey, PersistentDataType.INTEGER)
        val itemTranslations = when (potionLevel)
        {
            0 -> potionTranslations
            1 -> splashTranslations
            2 -> lingeringTranslations
            else -> throw IllegalStateException("Unhandled potion form: $potionLevel")
        }
        val defaultTranslation = when (potionLevel)
        {
            0 -> defaultPotionName
            1 -> defaultSplashName
            2 -> defaultLingeringName
            else -> throw SecurityException("An IllegalStateException should have been fired before; something is modifying the memory.")
        }
        itemTranslations.getString(
            locale,
            itemTranslations.getString(strippedLocale, defaultTranslation)
        )!!.let { meta.setDisplayName("ยงr$it") }
        infoTranslations.getString(
            locale,
            infoTranslations.getString(strippedLocale, defaultPotionInfo)
        )!!.let { meta.lore = listOf("ยง9$it") }
        item.itemMeta = meta
    }
}