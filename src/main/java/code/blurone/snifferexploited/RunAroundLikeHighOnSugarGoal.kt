package code.blurone.snifferexploited


import net.minecraft.world.entity.ai.goal.Goal
import net.minecraft.world.entity.ai.util.DefaultRandomPos
import org.bukkit.craftbukkit.v1_20_R1.entity.CraftSniffer
import org.bukkit.entity.EntityType
import org.bukkit.entity.Sniffer
import java.util.*

class RunAroundLikeHighOnSugarGoal(private val craftSniffer: CraftSniffer) : Goal() {
    init {
        flags = EnumSet.of(Flag.MOVE)
    }
    
    private val sniffer = craftSniffer.handle
    private var posX = 0.0
    private var posY = 0.0
    private var posZ = 0.0
    private var speedModifier = 10.0
    private var placesLeft = 6
    private var explosionAmount = 1.0f
    private var shallFire = false

    override fun canUse(): Boolean {
        val vec3d = DefaultRandomPos.getPos(sniffer, 5, 4)
        return if (vec3d == null) {
            false
        } else {
            posX = vec3d.x
            posY = vec3d.y
            posZ = vec3d.z
            true
        }
    }

    override fun start() {
        sniffer.navigation.moveTo(posX, posY, posZ, speedModifier)
    }

    override fun canContinueToUse(): Boolean {
        return placesLeft > 0
    }

    override fun tick() {
        craftSniffer.state = Sniffer.State.DIGGING

        if (!sniffer.navigation.isDone && !sniffer.navigation.isStuck) return

        if (placesLeft > 0)
        {
            canUse()
            start()
            placesLeft--
        }
        else
            explode()
    }

    private fun explode()
    {
        sniffer.navigation.stop()
        craftSniffer.world.createExplosion(craftSniffer.location, explosionAmount, shallFire, true, craftSniffer)
        //craftSniffer.world.spawnEntity(craftSniffer.location, EntityType.DROPPED_ITEM)
        craftSniffer.remove()
    }

    fun potentiate()
    {
        ++explosionAmount
        speedModifier *= 1.5
        placesLeft += 2
        shallFire = true
    }
}